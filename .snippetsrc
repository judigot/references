#!/bin/bash

function helloWorld() {
    local user=${USER:-$USERNAME}  # Use $USER if available, otherwise fallback to $USERNAME
    echo -e "\e[32mHello, $user!\e[0m"  # Green
}
alias hi='helloWorld'
alias hello='helloWorld'
alias helloworld='helloWorld'

updateRCFiles() {
    curl -sL https://raw.githubusercontent.com/judigot/references/main/.bashrc -o "$HOME/.bashrc" || { echo "Failed to download .bashrc"; return 1; }
    curl -sL https://raw.githubusercontent.com/judigot/references/main/.zshrc -o "$HOME/.zshrc" || { echo "Failed to download .zshrc"; return 1; }
    curl -sL https://raw.githubusercontent.com/judigot/references/main/.snippetsrc -o "$HOME/.snippetsrc" || { echo "Failed to download .snippetsrc"; return 1; }

    # Source the appropriate configuration based on the current shell
    if [[ "$0" == *"zsh"* ]]; then
        [[ -f "$HOME/.zshrc" ]] && source "$HOME/.zshrc"
    elif [[ "$0" == *"bash"* ]]; then
        [[ -f "$HOME/.bashrc" ]] && source "$HOME/.bashrc"
    fi

    # Source the shared snippets configuration
    [[ -f "$HOME/.snippetsrc" ]] && source "$HOME/.snippetsrc"
    
    echo "Configuration files updated and sourced successfully."
    return 0
}

alias update='updateRCFiles'
alias updaterc='updateRCFiles'
alias updatercfiles='updateRCFiles'
alias updatebashsnippets='updateRCFiles'

function bigBangVite() {
    curl -L "https://raw.githubusercontent.com/judigot/references/main/BigBangVite.sh" | bash
}
alias bbvite='bigBangVite'
alias bigbangvite='bigBangVite'
alias newprojectvite='bigBangVite'

function bigBangLaravel() {
    curl -L "https://raw.githubusercontent.com/judigot/references/main/BigBangLaravel.sh" | bash
}
alias bblaravel='bigBangLaravel'
alias bigbanglaravel='bigBangLaravel'
alias newprojectlaravel='bigBangLaravel'

function echoSSH() {
    echo -e "Copy and paste the public key below to your GitHub account:\n\n\e[32m$(cat ~/.ssh/id_rsa.pub) \e[0m\n" # Green
}
alias echossh='echoSSH'
alias echosshkey='echoSSH'
alias getssh='echoSSH'
alias getsshkey='echoSSH'

function generateSSHKey() {
    ssh-keygen -t rsa -f ~/.ssh/id_rsa -P "" && clear && echoSSH
}
alias createsshkey='generateSSHKey'
alias generatesshkey='generateSSHKey'